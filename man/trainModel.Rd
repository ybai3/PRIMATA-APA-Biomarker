% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ModelTrainingNestedCV.R
\name{trainModel}
\alias{trainModel}
\title{Predictive model training and testing in nested cross-validation.}
\usage{
trainModel(Data, num_simulation, trainportion = 0.75)
}
\arguments{
\item{Data}{A data frame consisting predictor matrix and outcome score (last column). One of two data frames included in the list object returned by \code{process_data}.}

\item{num_simulation}{Desired number of repetitive runs.}

\item{trainportion}{Desired portion of train set. Default to 0.75.}
}
\value{
A list containing 1) table of miRNA with the selected frequency and direction of association. 2) R-square estimated in the test set. 3) RMSE estimated in the test set.
}
\description{
\code{trainModel} splits data into train set and test set. It trains model using elastic net regression and evaluate the performance by calculating R square and RMSE on test set.
}
\details{
\code{trainModel} train predictive models using elastic net regression conjugated with nested cross-validation. In the outer loop of the nested cross-validation, the whole dataset is split into a train set (default 75%) and a test set (default 15%). In the inner loop, the optimization was done by 10-fold cross-validation on the train set where the optimal α (weight of L1 and L2 norm parameter, 10 possible values from 0-1, by 0.1) and β (penalty parameter) that lead to the most parsimonious model whose error is no more than one standard error above the lowest cross-validation error (1se) are selected. This procedure would be repeated user defined times and R square and root-mean-square-error (RMSE) would be calculated on test set as performance metric.
}
\examples{
result_NoPrior=trainModel(Data=df,num_simulation = 300)


}
